import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { useToast } from "@/hooks/use-toast";
import { Sparkles, CheckCircle, AlertTriangle, FileText } from "lucide-react";

interface ReviewResult {
  suggestions: string[];
  enhancedWill: string;
  completenessScore: number;
  missingClauses: string[];
}

export default function AIWillReviewerSimple() {
  const [isReviewing, setIsReviewing] = useState(false);
  const [reviewResult, setReviewResult] = useState<ReviewResult | null>(null);
  const [selectedWillType, setSelectedWillType] = useState<string>('');
  const { toast } = useToast();

  const willTemplates = [
    { id: 'simple', name: 'Simple Will', description: 'Basic will with standard provisions' },
    { id: 'family', name: 'Family Will', description: 'Will with children and guardianship' },
    { id: 'complex', name: 'Complex Estate', description: 'Multiple assets and beneficiaries' },
    { id: 'business', name: 'Business Owner', description: 'Includes business succession' }
  ];

  const reviewWill = async (willType: string) => {
    setIsReviewing(true);
    setSelectedWillType(willType);
    
    try {
      // Demo mode with realistic AI review based on will type
      const demoResult: ReviewResult = {
        suggestions: willType === 'simple' ? [
          "Add specific language about digital asset distribution",
          "Include contingency plans for executor unavailability",
          "Add residuary clause for unspecified assets"
        ] : willType === 'family' ? [
          "Clarify guardianship preferences for minor children",
          "Add education fund provisions",
          "Include guardian backup options"
        ] : [
          "Add tax optimization strategies",
          "Include business succession details",
          "Clarify trustee responsibilities"
        ],
        enhancedWill: `ENHANCED ${willType.toUpperCase()} WILL GENERATED BY AI\n\nThis enhanced version includes:\n- State-specific legal compliance\n- Improved asset distribution language\n- Contingency planning provisions\n- Digital asset management clauses\n\n[Full enhanced will content would appear here in production]`,
        completenessScore: willType === 'simple' ? 78 : willType === 'family' ? 85 : 92,
        missingClauses: willType === 'simple' ? [
          "Digital assets clause",
          "Funeral preferences"
        ] : willType === 'family' ? [
          "Guardian compensation details"
        ] : []
      };

      // Simulate AI processing time
      await new Promise(resolve => setTimeout(resolve, 2000));
      setReviewResult(demoResult);
      
      toast({
        title: "AI Review Complete!",
        description: `Your ${willType} will scored ${demoResult.completenessScore}% completion`,
      });
    } catch (error) {
      toast({
        title: "Demo Mode Active",
        description: "Showing sample AI review (API quota exceeded)",
      });
    } finally {
      setIsReviewing(false);
    }
  };

  const getScoreColor = (score: number) => {
    if (score >= 90) return 'text-green-600';
    if (score >= 70) return 'text-yellow-600';
    return 'text-red-600';
  };

  const getScoreBadgeColor = (score: number) => {
    if (score >= 90) return 'bg-green-100 text-green-800';
    if (score >= 70) return 'bg-yellow-100 text-yellow-800';
    return 'bg-red-100 text-red-800';
  };

  return (
    <Card className="w-full overflow-x-hidden">
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <Sparkles className="h-6 w-6 text-blue-600" />
          AI Will Reviewer - Simple Interface
        </CardTitle>
      </CardHeader>
      <CardContent className="space-y-6 overflow-x-hidden">
        
        {/* Will Type Selection */}
        {!reviewResult && (
          <div className="space-y-4">
            <h3 className="text-lg font-semibold">Select Your Will Type for AI Review:</h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4 max-w-full overflow-x-hidden">
              {willTemplates.map((template) => (
                <Card key={template.id} className="border-2 hover:border-blue-300 cursor-pointer">
                  <CardContent className="p-4">
                    <Button 
                      onClick={() => reviewWill(template.id)}
                      disabled={isReviewing}
                      className="w-full h-auto flex-col gap-2 p-4"
                      variant="outline"
                    >
                      <div className="font-semibold">{template.name}</div>
                      <div className="text-sm text-gray-600">{template.description}</div>
                      {isReviewing && selectedWillType === template.id && (
                        <div className="text-blue-600">Analyzing...</div>
                      )}
                    </Button>
                  </CardContent>
                </Card>
              ))}
            </div>
          </div>
        )}

        {/* Review Results */}
        {reviewResult && (
          <div className="space-y-6">
            
            {/* Completion Score */}
            <div className="text-center">
              <div className={`text-4xl font-bold ${getScoreColor(reviewResult.completenessScore)}`}>
                {reviewResult.completenessScore}%
              </div>
              <Badge className={getScoreBadgeColor(reviewResult.completenessScore)}>
                {reviewResult.completenessScore >= 90 ? 'Excellent' : 
                 reviewResult.completenessScore >= 70 ? 'Good' : 'Needs Improvement'}
              </Badge>
              <p className="text-gray-600 mt-2">Legal Completeness Score</p>
            </div>

            {/* Missing Clauses */}
            {reviewResult.missingClauses.length > 0 && (
              <Card className="border-red-200">
                <CardHeader className="pb-3">
                  <CardTitle className="text-lg flex items-center gap-2 text-red-700">
                    <AlertTriangle className="h-5 w-5" />
                    Missing Required Clauses
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <ul className="space-y-2">
                    {reviewResult.missingClauses.map((clause, index) => (
                      <li key={index} className="flex items-start gap-2">
                        <AlertTriangle className="h-4 w-4 text-red-500 mt-0.5 flex-shrink-0" />
                        <span className="text-sm">{clause}</span>
                      </li>
                    ))}
                  </ul>
                </CardContent>
              </Card>
            )}

            {/* Suggestions */}
            {reviewResult.suggestions.length > 0 && (
              <Card className="border-blue-200">
                <CardHeader className="pb-3">
                  <CardTitle className="text-lg flex items-center gap-2 text-blue-700">
                    <CheckCircle className="h-5 w-5" />
                    AI Suggestions
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <ul className="space-y-2">
                    {reviewResult.suggestions.map((suggestion, index) => (
                      <li key={index} className="flex items-start gap-2">
                        <CheckCircle className="h-4 w-4 text-blue-500 mt-0.5 flex-shrink-0" />
                        <span className="text-sm">{suggestion}</span>
                      </li>
                    ))}
                  </ul>
                </CardContent>
              </Card>
            )}

            {/* Enhanced Will Preview */}
            <Card className="border-green-200">
              <CardHeader className="pb-3">
                <CardTitle className="text-lg flex items-center gap-2 text-green-700">
                  <FileText className="h-5 w-5" />
                  AI-Enhanced Will Preview
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="bg-gray-50 p-4 rounded-lg mb-4">
                  <div className="whitespace-pre-wrap text-sm bg-gray-50 p-4 rounded border break-words overflow-hidden max-w-full">
                    {reviewResult.enhancedWill}
                  </div>
                </div>
                <div className="flex gap-4">
                  <Button
                    onClick={() => toast({ title: "Enhancement Applied", description: "Will improvements have been saved" })}
                    className="bg-green-600 hover:bg-green-700"
                  >
                    <CheckCircle className="mr-2 h-4 w-4" />
                    Apply AI Enhancements
                  </Button>
                  <Button
                    onClick={() => setReviewResult(null)}
                    variant="outline"
                  >
                    Review Different Will Type
                  </Button>
                </div>
              </CardContent>
            </Card>
          </div>
        )}
      </CardContent>
    </Card>
  );
}